name: Android CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout branch
      uses: actions/checkout@v4
    
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 17

    - name: Decode Keystore
      env:
        ENCODED_STRING: ${{ secrets.KEYSTORE_BASE_64 }}
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }} 
      run: |
        echo $ENCODED_STRING > keystore-b64.txt
        base64 -d keystore-b64.txt > Keystore

    - name: Build Release apk and aab
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      run: ./gradlew assembleRelease bundleRelease --stacktrace

    - name: Find APK and AAB files
      id: find_files
      run: |
        APK_PATH=$(find . -name "app-release.apk" | head -n 1)
        AAB_PATH=$(find . -name "app-release.aab" | head -n 1)
        echo "APK_PATH=$APK_PATH" >> $GITHUB_ENV
        echo "AAB_PATH=$AAB_PATH" >> $GITHUB_ENV

    - name: Upload APK to Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: app-release.apk
        path: ${{ env.APK_PATH }}

    - name: Upload AAB to Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: app-release.aab
        path: ${{ env.AAB_PATH }}

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout branch
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 17

    - name: Run Unit Tests
      run: ./gradlew test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      # Step 1 - Download app bundle
      - name: Download app bundle from artifact
        uses: actions/download-artifact@v3
        with:
          name: app-release.aab
          path: ./

      - name: Publish to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: fr.thomasbernard03.tarot
          releaseFiles: ${{ github.workspace }}/app-release.aab
          track: production
